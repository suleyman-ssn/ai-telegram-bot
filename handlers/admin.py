from aiogram import Router, F
from aiogram.filters import Command, Filter
from aiogram.types import Message
from typing import Union

from config import ADMIN_IDS
from database.db_manager import get_all_users_count, get_active_subs_count

class IsAdmin(Filter):
    async def __call__(self, message: Union[Message]) -> bool:
        return message.from_user.id in ADMIN_IDS

router = Router()
router.message.filter(IsAdmin()) 
@router.message(Command("admin"))
async def cmd_admin_panel(message: Message):
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:\n"
        "/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
        "/sendall [—Ç–µ–∫—Å—Ç] - –†–∞—Å—Å—ã–ª–∫–∞\n"
        "/set_tariff [user_id] [PRO/ULTRA/FREE] - –°–º–µ–Ω–∏—Ç—å —Ç–∞—Ä–∏—Ñ"
    )

@router.message(Command("stats"))
async def cmd_stats(message: Message):
    total_users = await get_all_users_count()
    active_subs = await get_active_subs_count()
    
    await message.answer(
        f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n"
        f"–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}\n"
        f"–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ (Pro/Ultra): {active_subs}"
    )

# TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å /sendall –∏ /set_tariff 
# /sendall —Ç—Ä–µ–±—É–µ—Ç —Ü–∏–∫–ª–∞ –ø–æ –≤—Å–µ–º user_id –∏–∑ –ë–î —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
# /set_tariff —Ç—Ä–µ–±—É–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏ –≤—ã–∑–æ–≤–∞ update_user